# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Setup kubectl
      uses: steebchen/kubectl@master
      env:
        kubeconfig: ${{ secrets.KUBECONFIG }}
        version: '1.26.3'

    - name: Check SonarQube service status
      run: kubectl get services -n sonarqube
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v1
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn clean install
    - name: SonarQube Scan
      uses: sonarsource/sonarqube-scan-action@v1
      env:     
        SONAR_TOKEN: ${{ secrets.SONARQUBE_TOKEN }}
        SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
    

    - name: Build & push Docker image
     
      uses: mr-smithers-excellent/docker-build-push@v5
      with:
        image: adammheni/test
        tags: latest
        registry: docker.io
        dockerfile: Dockerfile
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}


    # Optional: Uploads the full dependency graph to GitHub to improve the quality of Dependabot alerts this repository can receive
 #   - name: Update dependency graph
 #     working-directory: id
 #     uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6
